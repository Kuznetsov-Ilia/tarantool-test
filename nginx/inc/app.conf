location /tnt_rest {
  tnt_http_rest_methods get post put delete;
  tnt_pass_http_request on;
  tnt_multireturn_skip_count 2;
  tnt_pure_result on;
  tnt_pass backend;
  add_header Content-Type text/plain;
}
# location = /index.html {
#   add_header X-location index;
#   ssi on;
# }
# location / {
#   ssi on;
#   add_header X-location /;
#   try_files $uri $uri/index.html /index.html;
# }
# location = /404.html {
#   # This tells Nginx to cache open file handles, "not found" errors, metadata about files and their permissions, etc.
#   #
#   # The upside of this is that Nginx can immediately begin sending data when a popular file is requested,
#   # and will also know to immediately send a 404 if a file is missing on disk, and so on.
#   #
#   # However, it also means that the server won't react immediately to changes on disk, which may be undesirable.
#   #
#   # In the below configuration, inactive files are released from the cache after 20 seconds, whereas
#   # active (recently requested) files are re-validated every 30 seconds.
#   #
#   # Descriptors will not be cached unless they are used at least 2 times within 20 seconds (the inactive time).
#   #
#   # A maximum of the 1000 most recently used file descriptors can be cached at any time.
#   #
#   # Production servers with stable file collections will definitely want to enable the cache.
#   open_file_cache          max=1000 inactive=20s;
#   open_file_cache_valid    30s;
#   open_file_cache_min_uses 2;
#   open_file_cache_errors   on;
# }
